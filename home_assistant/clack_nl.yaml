#------------
#INPUT SELECT
#------------
# Opm: de stap 2e terugspoeling (backwash) is eruit gehaald, tussen zoutspoeling en snelspoeling.
# Deze stap weghalen bespaart water en is mogelijk niet persee nodig. Dit kan ingesteld worden in de Clack
input_select:
  clack_water_softener_status:
    name: Water softener status
    options:
      - terugspoeling
      - zoutspoeling
      - snelspoeling
      - vullen
      - standby
    initial: standby
    
#-----------
#TIMERS       
#-----------
# Opm: verander deze naar de eigen tijdsduur van de waterontharder (stopwatch)
timer:
  timer_ws_backwash:
    name: terugspoeling
#    duration: '0:00:57'  
    duration: '0:00:10'

  timer_ws_brine:
    name: zoutspoeling
#    duration: '0:01:07'
    duration: '0:00:10'

  timer_ws_rinse:
    name: snelspoeling
#    duration: '0:01:14'
    duration: '0:00:10'

  timer_ws_fill:
    name: vullen
#    duration: '0:01:10'
    duration: '0:00:10'

  timer_ws_total:  #sum of all above values
    name: total
#    duration: '0:05:44'
    duration: '0:00:40'

#-----------
#SENSORS
#-----------
template:
  sensor:
    - name: "tijd_tot_regeneratie" # custom sensor die het aantal dagen berekend totdat opnieuw een regeneratie van de waterontharder moet plaatsvinden
      state: >
        {%- set time = (states('number.clack_capaciteit_in_dagen') | int * 86400) - (as_timestamp(now()) - as_timestamp((strptime(states('sensor.clack_geregenereerd_op')[4:15], '%d %b %H:%M').replace(year=now().year)))) | int  %}
        {%- set hours = ((time % 86400) // 3600) %}
        {%- set hours = '{}h '.format(hours) if hours > 0 else '' %}
        {%- set days = (time // 86400) %}
        {%- set days = '{}d '.format(days) if days > 0 else '' %}
        {{days + hours}}
      unique_id: "tijd_tot_regeneratie"
      icon: mdi:calendar-clock

#-----------
#UTILITY METER
#-----------
utility_meter:
  clack_waterverbruik_dit_kwartier:  
    source: sensor.clack_watermeter
    cycle: quarter-hourly
  clack_waterverbruik_dit_uur:
    source: sensor.clack_watermeter
    cycle: hourly
  clack_waterverbruik_vandaag:
    source: sensor.clack_watermeter
    cycle: daily 
  clack_waterverbruik_maand:
    source: sensor.clack_watermeter
    cycle: monthly
  clack_waterverbruik_jaar:
    source: sensor.clack_watermeter
    cycle: yearly 

#-----------
#AUTOMATIONS
#-----------
automation:
  ####################################################
  - id: set_water_softener_start_backwash
    alias: Set water softener start backwash
    trigger:
    - platform: state
      entity_id:
      - binary_sensor.clack_regeneratie_pulse
      to: 'on'
    - platform: state
      entity_id: button.clack_test_button_regen_pulse
    condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: input_select.clack_water_softener_status
        state: standby
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.clack_water_softener_status
        option: terugspoeling
    - service: timer.start
      entity_id: timer.timer_ws_backwash
    - service: timer.start
      entity_id: timer.timer_ws_total
    initial_state: true
  ####################################################
  - id: set_water_softener_start_brine
    alias: Set water softener start brine
    trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.timer_ws_backwash
    condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: input_select.clack_water_softener_status
        state: terugspoeling
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.clack_water_softener_status
        option: zoutspoeling
    - service: timer.start
      entity_id: timer.timer_ws_brine
    initial_state: true
  ####################################################
  - id: set_water_softener_start_rinse
    alias: Set water softener start rinse
    trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.timer_ws_brine
    condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: input_select.clack_water_softener_status
        state: zoutspoeling
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.clack_water_softener_status
        option: snelspoeling
    - service: timer.start
      entity_id: timer.timer_ws_rinse
    initial_state: true
  ####################################################
  - id: set_water_softener_start_fill
    alias: Set water softener start fill
    trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.timer_ws_rinse
    condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: input_select.clack_water_softener_status
        state: snelspoeling
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.clack_water_softener_status
        option: vullen
    - service: timer.start
      entity_id: timer.timer_ws_fill
    initial_state: true
  ####################################################
  - id: set_water_softener_idle
    alias: Set water softener Idle
    trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.timer_ws_fill
    condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: input_select.clack_water_softener_status
        state: vullen
    action:
    - service: input_select.select_option
      data:
        entity_id: input_select.clack_water_softener_status
        option: standby
    - service: esphome.clack_meterstand_clack
      data:
        meter_value: 0
    - service: input_number.set_value
      data_template:
        entity_id: input_number.clack_water_softener_meter_liters
        value: 0
    initial_state: true
  #------------------------------------------------------------------
  # Automatisering opties: alarm zoutmelding en alarm hardheid meten. 
  # vul je eigen mobile_app_iphone_van_xxx in. (als voorbeeld)            
  #------------------------------------------------------------------
  - id: salt_level_alarm_notify
    alias: Zoutniveau alarm melding
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.clack_zout_bijvullen
      to: ja
    condition:
    - condition: time
      after: 07:30:00
      before: '22:00:00'
    action:
    - service: notify.mobile_app_iphone_van_a_c_a
      data:
        title: Let op!
        message: Zout niveau van ontharder is laag! Vandaag gaan bijvullen!
        data:
          push:
            sound:
              name: default
              critical: 1
              volume: 1
    - delay:
        minutes: 30
    initial_state: 'true'
    mode: single
  ##################################################
  - id: measure_hardness_notify
    alias: Hardheid meten
    description: ''
    trigger:
    - platform: numeric_state
      entity_id:
      - sensor.clack_watermeter
      above: 3000
    condition:
    - condition: time
      after: 07:30:00
      before: '22:00:00'
    action:
    - service: notify.mobile_app_iphone_van_a_c_a
      data:
        title: Let op!
        data:
          push:
            sound:
              name: default
              critical: 1
              volume: 1
        message: 'Ontharder hardheid meten: nu 3000 ltr'
    - delay:
        minutes: 30
    mode: single
    initial_state: 'true'